var search_data = {"index":{"searchIndex":["automarshallingmap","markovchain","markovchainchatbot","object","string","[]()","[]=()","answer()","append!()","append_limited()","data()","data()","from()","from()","learn()","new()","new()","predict()","readme"],"longSearchIndex":["automarshallingmap","markovchain","markovchainchatbot","object","string","automarshallingmap#[]()","automarshallingmap#[]=()","markovchainchatbot#answer()","markovchain#append!()","string#append_limited()","markovchain#data()","markovchainchatbot#data()","markovchain::from()","markovchainchatbot::from()","markovchainchatbot#learn()","automarshallingmap::new()","markovchain::new()","markovchain#predict()",""],"info":[["AutoMarshallingMap","","AutoMarshallingMap.html","","<p>A map which automatically marshals all keys and values passed to it.\n"],["MarkovChain","","MarkovChain.html","",""],["MarkovChainChatBot","","MarkovChainChatBot.html","","<p>A chat bot utilizing MarkovChain.\n"],["Object","","Object.html","",""],["String","","String.html","",""],["[]","AutoMarshallingMap","AutoMarshallingMap.html#method-i-5B-5D","(key)",""],["[]=","AutoMarshallingMap","AutoMarshallingMap.html#method-i-5B-5D-3D","(key, value)",""],["answer","MarkovChainChatBot","MarkovChainChatBot.html#method-i-answer","(question)","<p><code>question</code> is String.\n<p>It returns String.\n"],["append!","MarkovChain","MarkovChain.html#method-i-append-21","(states)","<p>appends <code>states</code> to the end of this MarkovChain.\n<p><code>states</code> is an Array of arbitrary objects.\n<p>It returns this …\n"],["append_limited","String","String.html#method-i-append_limited","(appendment, limit)","<p>appends <code>appendment</code> to this String or throws\n<code>:out_of_limit</code> if this String will exceed <code>limit</code>\nafter the …\n"],["data","MarkovChain","MarkovChain.html#method-i-data","()","<p><code>data</code> passed to MarkovChain.new() or MarkovChain.from().\n"],["data","MarkovChainChatBot","MarkovChainChatBot.html#method-i-data","()","<p><code>data</code> passed to MarkovChainChatBot.from().\n"],["from","MarkovChain","MarkovChain.html#method-c-from","(data)","<p><code>data</code> is #data() of the other MarkovChain. It becomes owned by\nthe returned MarkovChain.\n"],["from","MarkovChainChatBot","MarkovChainChatBot.html#method-c-from","(data, answer_limit = 1000)","<p><code>data</code> is a map. It may be empty, in this case a brand new\nMarkovChainChatBot is created. <code>data</code> becomes ...\n"],["learn","MarkovChainChatBot","MarkovChainChatBot.html#method-i-learn","(message)","<p><code>message</code> is String.\n<p>It returns this (modified) MarkovChainChatBot.\n"],["new","AutoMarshallingMap","AutoMarshallingMap.html#method-c-new","(backend)","<p><code>backend</code> is a Map from String to (String or nil). It will be\nused as a backend storage for the new AutoMarshallingMap ...\n"],["new","MarkovChain","MarkovChain.html#method-c-new","(data = {})","<p>creates an empty MarkovChain.\n<p><code>data</code> is a map which becomes owned by this MarkovChain.\n"],["predict","MarkovChain","MarkovChain.html#method-i-predict","()","<p>returns Enumerable of predicted states. The states are predicted by states\npassed to #append!().\n<p>The result …\n"],["README","","README.html","","<p>Markov chain chat bot\n<p>A chat bot utilizing Markov chains. It speaks Russian and English.\n<p>Examples\n"]]}}